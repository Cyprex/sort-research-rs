[package]
name = "sort_comp"
version = "0.1.0"
edition = "2021"
# type = "lib"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
rand = "0.8"
once_cell = "1.15"
radsort = { version = "0.1", optional = true }
dmsort = { version = "1.0", optional = true }

[dev-dependencies]
criterion = { version = "0.3", features = ["html_reports"] }

[build-dependencies]
cc = "1.0"

[[bench]]
name = "bench"
harness = false

[features]
default = []

# Enable support for C++ std::sort and std::sort_stable.
cpp_std_sys = []

# Enable support for libcxx.
# You must provide a prebuild static libcxx see: https://libcxx.llvm.org/BuildingLibcxx.html
# Set the enviroment variable LIBCXX_CUSTOM_BUILD_DIR=<...>
# This creates a new cpp_std_libcxx.
cpp_std_libcxx = []

# Enable support for cpp_pdqsort.
# Uses system C++ standard lib.
cpp_pdqsort = []

# Enable powersort from the Multiway Powersort (2022) paper.
# Uses system C++ standard lib.
cpp_powersort = []

# Enable support for c_crumsort.
# Uses system C++ standard lib.
c_crumsort = []

# Enable support for c_fluxsort.
# Uses system C++ standard lib.
c_fluxsort = []

# Enable rust_wpwoodjr sort.
# No additional requirements, but disabled by default to keep things lean.
rust_wpwoodjr = []

# Enable radsort. Radix sort used by bevy.
# No additional requirements, but disabled by default to keep things lean.
rust_radsort = ["radsort"]

# Enable drop-merge sort developed by Emil Ernerfeldt (emilk)
# No additional requirements, but disabled by default to keep things lean.
rust_dmsort = ["dmsort"]
